#!/bin/bash

# NATS Infrastructure Server Setup - SELF-CONTAINED VERSION
# Copy this script to your NATS server and run it - no repo needed!

set -e

echo "🏗️  Setting up NATS Infrastructure Server"
echo "========================================="

# Check if running as root
if [[ $EUID -eq 0 ]]; then
   echo "❌ Do not run this script as root. Run as a user with sudo privileges."
   exit 1
fi

# Variables
NATS_VERSION="v2.10.7"
NATS_USER="nats"
CONFIG_FILE="/etc/nats/nats-server.conf"

echo "📥 Installing NATS server $NATS_VERSION..."

# Download and install NATS server
cd /tmp
curl -L https://github.com/nats-io/nats-server/releases/download/${NATS_VERSION}/nats-server-${NATS_VERSION}-linux-amd64.zip -o nats-server.zip
unzip -o nats-server.zip
sudo cp nats-server-${NATS_VERSION}-linux-amd64/nats-server /usr/local/bin/
sudo chmod +x /usr/local/bin/nats-server
rm -rf nats-server*

echo "👤 Creating NATS user and directories..."

# Create nats user if doesn't exist
if ! id "$NATS_USER" &>/dev/null; then
    sudo useradd --system --no-create-home --shell /bin/false $NATS_USER
    echo "Created user: $NATS_USER"
else
    echo "User $NATS_USER already exists"
fi

# Create directories
sudo mkdir -p /etc/nats
sudo mkdir -p /var/lib/nats
sudo mkdir -p /var/log/nats

# Set ownership
sudo chown -R $NATS_USER:$NATS_USER /var/lib/nats
sudo chown -R $NATS_USER:$NATS_USER /var/log/nats

echo "⚙️  Creating NATS configuration..."

# Generate secure token
echo "🔐 Generating secure token..."
TOKEN=$(openssl rand -hex 32)

# Create configuration file inline
sudo tee $CONFIG_FILE > /dev/null <<EOF
# Generic NATS Server Configuration
# Pure infrastructure - no service-specific logic
# Generated by setup script

# Server settings
server_name: "distributed-processing-nats"
host: "0.0.0.0"
port: 4222

# Enable JetStream for all processing services
jetstream: {
    # Store data in /var/lib/nats
    store_dir: "/var/lib/nats"
    # Max memory: 2GB (adjust based on server capacity)
    max_memory_store: 2147483648
    # Max file storage: 50GB (adjust based on server capacity)
    max_file_store: 53687091200
}

# Token-based authentication
authorization {
    token: "$TOKEN"
}

# Logging
log_file: "/var/log/nats/nats-server.log"
logtime: true
debug: false
trace: false

# Limits - generous for multiple service types
max_payload: 16MB
max_connections: 10000
max_subscriptions: 100000

# Monitoring endpoint
http_port: 8222

# Cluster settings (for future HA setup)
# cluster {
#     name: "distributed-processing"
#     listen: "0.0.0.0:6222"
#     routes: [
#         nats-route://nats1:6222
#         nats-route://nats2:6222
#     ]
# }
EOF

# Set proper ownership and permissions
sudo chown $NATS_USER:$NATS_USER $CONFIG_FILE
sudo chmod 640 $CONFIG_FILE

echo "Generated token: ${TOKEN:0:8}...${TOKEN: -8}"
echo "⚠️  SAVE THIS TOKEN - you'll need it for clients!"
echo ""
echo "🔑 FULL TOKEN (copy this to your processing servers):"
echo "NATS_TOKEN=$TOKEN"
echo ""

echo "📋 Installing systemd service..."

# Create systemd service
sudo tee /etc/systemd/system/nats.service > /dev/null <<EOF
[Unit]
Description=NATS Infrastructure Server
After=network.target

[Service]
Type=simple
User=$NATS_USER
Group=$NATS_USER
ExecStart=/usr/local/bin/nats-server -c $CONFIG_FILE
ExecReload=/bin/kill -HUP \$MAINPID
KillMode=process
Restart=on-failure
RestartSec=5s
LimitNOFILE=65536

[Install]
WantedBy=multi-user.target
EOF

# Reload and enable service
sudo systemctl daemon-reload
sudo systemctl enable nats

echo "🔥 Starting NATS server..."
sudo systemctl start nats

# Wait a moment for startup
sleep 3

echo "✅ Installation complete!"
echo ""
echo "📊 Status:"
sudo systemctl status nats --no-pager -l

echo ""
echo "🔧 Next steps:"
echo "1. Configure firewall to allow port 4222 from your processing servers"
echo "   sudo ufw allow from PROCESSING_SERVER_IP to any port 4222"
echo "2. Optional: Allow port 8222 for monitoring"
echo "   sudo ufw allow from YOUR_LAPTOP_IP to any port 8222"
echo "3. Copy the token above to your processing servers' .env files"
echo "4. Test connection from processing servers"
echo ""
echo "📝 Useful commands:"
echo "  sudo systemctl status nats     # Check status"
echo "  sudo journalctl -u nats -f    # View logs"
echo "  curl localhost:8222/varz      # Server info"
echo "  curl localhost:8222/connz     # Connections"

# Test basic functionality
echo ""
echo "🧪 Testing server..."
if curl -s http://localhost:8222/varz > /dev/null; then
    echo "✅ NATS server is responding on monitoring port"
else
    echo "⚠️  NATS monitoring port not responding"
fi

echo ""
echo "🔑 TOKEN REMINDER:"
echo "Add this to your processing servers' .env files:"
echo "NATS_URL=nats://$(hostname -I | awk '{print $1}'):4222"
echo "NATS_TOKEN=$TOKEN"
echo ""
echo "🎉 NATS Infrastructure Server is ready!" 